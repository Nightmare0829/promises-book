{"version":3,"sources":["../../src/config/separate-by-config-option.js"],"names":[],"mappings":";AACA;;;;;;;;kBAOwB,0B;;AANxB;;;;;;;AAMe,SAAS,0BAAT,CAAoC,WAApC,EAAiD;AAC5D,QAAM,SAAS;AACX,iBAAS,EADE;AAEX,mBAAW,EAFA;AAGX,iBAAS;AAHE,KAAf;AAKA,QAAI,CAAC,WAAL,EAAkB;AACd,eAAO,MAAP;AACH;AACD,WAAO,IAAP,CAAY,WAAZ,EAAyB,OAAzB,CAAiC,eAAO;;AAEpC,YAAI,iCAAgB,GAAhB,CAAJ,EAA0B;AACtB,gBAAI,QAAO,YAAY,GAAZ,CAAP,MAA4B,QAA5B,IAAwC,YAAY,GAAZ,MAAqB,IAAjE,EAAuE;AACnE,uBAAO,OAAP,CAAe,IAAf,CAAoB,GAApB;AACH;AACD;AACH;;AAED,YAAI,iCAAgB,GAAhB,CAAJ,EAA0B;AACtB;AACH;;AAED,YAAI,QAAO,YAAY,GAAZ,CAAP,MAA4B,QAA5B,IAAwC,YAAY,GAAZ,MAAqB,IAAjE,EAAuE;AACnE,mBAAO,SAAP,CAAiB,IAAjB,CAAsB,GAAtB;AACH,SAFD,MAEO;AACH,mBAAO,OAAP,CAAe,IAAf,CAAoB,GAApB;AACH;AACJ,KAlBD;AAmBA,WAAO,MAAP;AACH","file":"separate-by-config-option.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport {isPluginRuleKey, isPresetRuleKey} from \"../util/config-util\";\n/**\n * Get rule keys from `.textlintrc` config object.\n * @param {Object} [rulesConfig]\n * @returns {{available: string[], disable: string[]}}\n */\nexport default function separateAvailableOrDisable(rulesConfig) {\n    const ruleOf = {\n        presets: [],\n        available: [],\n        disable: []\n    };\n    if (!rulesConfig) {\n        return ruleOf;\n    }\n    Object.keys(rulesConfig).forEach(key => {\n        // `textlint-rule-preset-XXX`\n        if (isPresetRuleKey(key)) {\n            if (typeof rulesConfig[key] === \"object\" || rulesConfig[key] === true) {\n                ruleOf.presets.push(key);\n            }\n            return;\n        }\n        // `<plugin>/<rule-key>` should ignored\n        if (isPluginRuleKey(key)) {\n            return;\n        }\n        // ignore `false` value\n        if (typeof rulesConfig[key] === \"object\" || rulesConfig[key] === true) {\n            ruleOf.available.push(key);\n        } else {\n            ruleOf.disable.push(key);\n        }\n    });\n    return ruleOf;\n}\n"]}