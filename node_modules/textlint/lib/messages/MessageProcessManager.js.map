{"version":3,"sources":["../../src/messages/MessageProcessManager.js"],"names":[],"mappings":";AACA;;;;;;;;;;IACqB,qB;;;;;;AAKjB,qCAA4B;AAAA,YAAhB,SAAgB,yDAAJ,EAAI;;AAAA;;AACxB,aAAK,UAAL,GAAkB,SAAlB;AACH;;;;4BAEG,O,EAAS;AACT,iBAAK,UAAL,CAAgB,IAAhB,CAAqB,OAArB;AACH;;;+BAEM,O,EAAS;AACZ,gBAAM,QAAQ,KAAK,UAAL,CAAgB,OAAhB,CAAwB,OAAxB,CAAd;AACA,gBAAI,UAAU,CAAC,CAAf,EAAkB;AACd,qBAAK,UAAL,CAAgB,MAAhB,CAAuB,KAAvB,EAA8B,CAA9B;AACH;AACJ;;;;;;;;;;gCAOO,Q,EAAU;AACd,gBAAM,mBAAmB,QAAzB;AACA,gBAAI,KAAK,UAAL,KAAoB,CAAxB,EAA2B;AACvB,uBAAO,gBAAP;AACH;AACD,mBAAO,KAAK,UAAL,CAAgB,MAAhB,CAAuB,UAAC,QAAD,EAAW,MAAX,EAAsB;AAChD,uBAAO,OAAO,QAAP,CAAP;AACH,aAFM,EAEJ,gBAFI,CAAP;AAGH;;;;;;kBAjCgB,qB","file":"MessageProcessManager.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nexport default class MessageProcessManager {\n    /**\n     * create MessageProcessManager with processes\n     * @param {function(messages: Array)[]} processes\n     */\n    constructor(processes = []) {\n        this._processes = processes;\n    }\n\n    add(process) {\n        this._processes.push(process);\n    }\n\n    remove(process) {\n        const index = this._processes.indexOf(process);\n        if (index !== -1) {\n            this._processes.splice(index, 1);\n        }\n    }\n\n    /**\n     * process `messages` with registered processes\n     * @param {TextLintMessage[]} messages\n     * @returns {TextLintMessage[]}\n     */\n    process(messages) {\n        const originalMessages = messages;\n        if (this._processes === 0) {\n            return originalMessages;\n        }\n        return this._processes.reduce((messages, filter) => {\n            return filter(messages);\n        }, originalMessages);\n    }\n}\n"]}